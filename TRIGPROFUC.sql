--2.1.a
CREATE PROC proc_insert_food_and_drink
    @LOAI VARCHAR(100) = NULL,
    @TEN VARCHAR(100) = NULL,
    @VERSION INT = NULL,
    @GIA BIGINT = NULL,
    @NGUYENLIEU VARCHAR(100) = NULL,
    @MOTA VARCHAR(100) = NULL,
    @NGAYTHEM DATE = NULL,
    @TINHTRANG VARCHAR(100) = NULL,
    @XUATXU VARCHAR(100) = NULL,
    @CACHCHEBIEN VARCHAR(100) = NULL,
    @CANHBAODIUNG VARCHAR(100) = NULL
AS
BEGIN
    DECLARE @NULLCOLUMN TABLE(COLUMNNAME VARCHAR(100))
    DECLARE @REDUNCOLUMN TABLE(SPARENAME VARCHAR(100))
    DECLARE @MISSINGCOLUMN VARCHAR(100)
    DECLARE @SPARECOLUMN VARCHAR(100)
    IF(@TEN IS NULL) INSERT INTO @NULLCOLUMN
    VALUES('cot TEN')
    IF(@VERSION IS NULL) INSERT INTO @NULLCOLUMN
    VALUES('cot VERSION')
    IF(@GIA IS NULL) INSERT INTO @NULLCOLUMN
    VALUES('cot GIA')
    IF(EXISTS(SELECT 1
    FROM @NULLCOLUMN))
    BEGIN
        SELECT @MISSINGCOLUMN = STRING_AGG(COLUMNNAME,',')
        FROM @NULLCOLUMN
        PRINT N'Chua nhap du lieu o '+@MISSINGCOLUMN
        ROLLBACK TRAN
        RETURN
    END
    IF(EXISTS(SELECT 1
    FROM FOODANDDRINK
    WHERE @VERSION != VERSION))
    BEGIN
        PRINT N'Khac version mon an'
        ROLLBACK TRAN
        RETURN
    END
    IF EXISTS(SELECT 1
    FROM FOODANDDRINK
    WHERE @TEN = TEN )
    BEGIN
        PRINT N'Trung ten mon an'
        ROLLBACK TRAN
        RETURN
    END
    IF @GIA <=0
    BEGIN
        PRINT N'Gia nhap khong hop le'
        ROLLBACK TRAN
        RETURN
    END
    IF @LOAI = 'DO AN'
    BEGIN
        IF(@NGUYENLIEU IS NULL) INSERT INTO @NULLCOLUMN
        VALUES('cot NGUYENLIEU')
        IF(@MOTA IS NULL) INSERT INTO @NULLCOLUMN
        VALUES('cot MOTA')
        IF(@NGAYTHEM IS NULL) INSERT INTO @NULLCOLUMN
        VALUES('cot NGAYTHEM')
        IF(@TINHTRANG IS NULL) INSERT INTO @NULLCOLUMN
        VALUES('cot TINHTRANG')
        IF(@CACHCHEBIEN IS NULL) INSERT INTO @NULLCOLUMN
        VALUES('cot CACHCHEBIEN')
        IF(@CANHBAODIUNG IS NULL) INSERT INTO @NULLCOLUMN
        VALUES('cot CANHBAODIUNG')
        IF(EXISTS(SELECT 1
        FROM @NULLCOLUMN))
        BEGIN
            SELECT @MISSINGCOLUMN = STRING_AGG(COLUMNNAME,',')
            FROM @NULLCOLUMN
            PRINT N'Chua nhap du lieu o '+@MISSINGCOLUMN
            ROLLBACK TRAN
            RETURN
        END
        IF(@XUATXU IS NOT NULL) 
        BEGIN
            PRINT N'Ban khong duoc nhap cot XUATXU'
            ROLLBACK TRAN
            RETURN
        END
        ELSE 
        BEGIN
            INSERT INTO FOODANDDRINK
                (TEN,VERSION,GIA,NGUYENLIEU,MOTA,NGAYTHEM,TINHTRANG)
            VALUES(@TEN, @VERSION, @GIA, @NGUYENLIEU, @MOTA, @NGAYTHEM, @TINHTRANG)
            INSERT INTO MON_AN
                (TEN,VERSION,CACHCHEBIEN,CANHBAODIUNG)
            VALUES(@TEN, @VERSION, @CACHCHEBIEN, @CANHBAODIUNG)
        END
    END
    ELSE IF @LOAI = 'DO UONG'
    BEGIN
        IF(@NGUYENLIEU IS NOT NULL) INSERT INTO @REDUNCOLUMN
        VALUES('cot NGUYENLIEU')
        IF(@MOTA IS NOT NULL) INSERT INTO @REDUNCOLUMN
        VALUES('cot MOTA')
        IF(@NGAYTHEM IS NOT NULL) INSERT INTO @REDUNCOLUMN
        VALUES('cot NGAYTHEM')
        IF(@TINHTRANG IS NOT NULL) INSERT INTO @REDUNCOLUMN
        VALUES('cot TINHTRANG')
        IF(@CACHCHEBIEN IS NOT NULL) INSERT INTO @REDUNCOLUMN
        VALUES('cot CACHCHEBIEN')
        IF(@CANHBAODIUNG IS NOT NULL) INSERT INTO @REDUNCOLUMN
        VALUES('cot CANHBAODIUNG')
        IF(EXISTS(SELECT 1
        FROM @REDUNCOLUMN))
        BEGIN
            SELECT @SPARECOLUMN = STRING_AGG(SPARENAME,',')
            FROM @REDUNCOLUMN
            PRINT N'Ban khong duoc nhap '+@SPARECOLUMN
            ROLLBACK TRAN
            RETURN
        END
        IF(@XUATXU IS NULL)
        BEGIN
            PRINT N'Chua nhap du lieu o cot XUATXU'
            ROLLBACK TRAN
            RETURN
        END
        ELSE
        BEGIN
            INSERT INTO FOODANDDRINK
                (TEN,VERSION,GIA,NGUYENLIEU,MOTA,NGAYTHEM,TINHTRANG)
            VALUES(@TEN, @VERSION, @GIA, @NGUYENLIEU, @MOTA, @NGAYTHEM, @TINHTRANG)
            INSERT INTO DO_UONG
                (TEN,VERSION,XUATXU)
            VALUES(@TEN, @VERSION, @XUATXU)
        END
    END
END
GO


--2.1.b
CREATE PROC proc_update_food_and_drink
    @TEN VARCHAR(100) = NULL,
    @GIA BIGINT = NULL,
    @NGUYENLIEU VARCHAR(100) = NULL,
    @CACHCHEBIEN VARCHAR(100) = NULL,
    @XUATXU VARCHAR(100) = NULL
AS
BEGIN
    IF(NOT EXISTS(SELECT *
    FROM FOODANDDRINK
    WHERE @TEN = TEN))
    BEGIN
        PRINT N'Ten mon khong ton tai!'
        ROLLBACK TRAN
        RETURN
    END
    IF @GIA <= 0
    BEGIN
        PRINT N'Gia ca khong hop le!'
        ROLLBACK TRAN
        RETURN
    END
    ELSE 
    BEGIN
        DECLARE @GIAFD BIGINT
        SELECT @GIAFD = GIA
        FROM FOODANDDRINK
        WHERE @TEN = TEN
        IF(@GIAFD<>@GIA)
        BEGIN
            UPDATE FOODANDDRINK
            SET GIA = @GIA,NGUYENLIEU = @NGUYENLIEU
            WHERE @TEN = TEN
            UPDATE MON_AN
            SET CACHCHEBIEN = @CACHCHEBIEN
            WHERE @TEN = TEN
            UPDATE DO_UONG
            SET XUATXU = @XUATXU
            WHERE @TEN = TEN
        END
        ELSE 
        BEGIN
            UPDATE FOODANDDRINK
            SET NGUYENLIEU = @NGUYENLIEU
            WHERE @TEN = TEN
            UPDATE MON_AN
            SET CACHCHEBIEN = @CACHCHEBIEN
            WHERE @TEN = TEN
            UPDATE DO_UONG
            SET XUATXU = @XUATXU
            WHERE @TEN = TEN
        END
    END
END
GO
--2.1.c
CREATE PROC proc_delete_food_and_drink
    @TEN VARCHAR(100) = NULL
AS
BEGIN
    IF(NOT EXISTS(SELECT *
    FROM FOODANDDRINK
    WHERE @TEN = TEN))
    BEGIN
        PRINT N'Mon nay khong ton tai'
        ROLLBACK TRAN
        RETURN
    END
    IF(NOT EXISTS(SELECT DISTINCT TEN
    FROM HOADON HD
        JOIN DONHANG_FD DH
        ON HD.MADONHANG = DH.MDH
    WHERE @TEN = TEN))
    BEGIN
        DELETE FROM MON_AN
        WHERE @TEN = TEN
        DELETE FROM FOODANDDRINK
        WHERE @TEN = TEN
    END
    ELSE
    BEGIN
        UPDATE FOODANDDRINK
        SET TINHTRANG = 'Khong ban'
        WHERE @TEN = TEN
    END
END
GO

--2.2.b
-- CREATE TRIGGER trig_total_cost_of_bill
-- ON DONHANG_FD
-- FOR INSERT,UPDATE,DELETE
-- AS
-- BEGIN
--     UPDATE 
-- END
-- GO
--2.3.a
CREATE PROC proc_list_employee_of_room
    @SOPHONG VARCHAR(100) = NULL,
    @NGAYPHUCVU DATE = NULL
AS
BEGIN
    SELECT HOTEN
    FROM PHUCVU_PHONG
        JOIN PHUCVU
        ON PHUCVU.MANHANVIEN = PHUCVU_PHONG.MANVPHUCVU
        JOIN NHANVIEN
        ON PHUCVU_PHONG.MANVPHUCVU = NHANVIEN.MANHANVIEN
    WHERE @SOPHONG = SOPHONG AND @NGAYPHUCVU = NGAYPHUCVU
END
GO

--2.3.b
CREATE PROC proc_bestseller_food
    @QUY INT = NULL,
    @NAM INT = NULL
AS
BEGIN
    WITH
        QUY_NAM
        AS
        (
            SELECT YEAR(D1.NGAYDATHANG) AS NAM , DATEPART(QUARTER,D1.NGAYDATHANG) AS QUY , D2.TEN, SUM(D2.SOLUONG) AS TONGLUOTMUA, SUM(D2.GIA) AS TONGDOANHTHU
            FROM DONHANG D1
                JOIN DONHANG_FD D2
                ON D1.MADONHANG = D2.MDH
            GROUP BY YEAR(D1.NGAYDATHANG),DATEPART(QUARTER,D1.NGAYDATHANG),D2.TEN
            HAVING DATEPART(QUARTER,D1.NGAYDATHANG)= @QUY AND YEAR(D1.NGAYDATHANG) = @NAM
        )
    SELECT *
    FROM QUY_NAM
    WHERE TONGDOANHTHU >=400000
    ORDER BY QUY,TONGLUOTMUA
END
GO

--2.4.a
CREATE FUNCTION func_favorited_food
(
    @TEN VARCHAR(100),
    @YEAR INT
)
RETURNS VARCHAR(100)
AS
BEGIN
    DECLARE @KETQUA VARCHAR(100)

    IF NOT EXISTS(SELECT *
    FROM FOODANDDRINK
    WHERE TEN = @TEN)
    BEGIN
        SET @KETQUA = 'Mon nay khong ton tai'
    END
    ELSE
    BEGIN
        SELECT @KETQUA = 
        CASE 
            WHEN SUM(D1.SOLUONG)>=0 AND SUM(D1.SOLUONG)<1 THEN '1 sao'
            WHEN SUM(D1.SOLUONG)>= 1 AND SUM(D1.SOLUONG)< 2 THEN '2 sao'
            WHEN SUM(D1.SOLUONG)>=2 AND SUM(D1.SOLUONG)<3 THEN '3 sao'
            WHEN SUM(D1.SOLUONG) >=3 AND SUM(D1.SOLUONG)<4 THEN '4 sao'
            WHEN SUM(D1.SOLUONG) >=4 THEN '5 sao'
        END
        FROM DONHANG_FD D1
            JOIN FOODANDDRINK F1
            ON F1.TEN = D1.TEN
            JOIN DONHANG D2
            ON D1.MDH = D2.MADONHANG
        WHERE F1.TEN = @TEN AND YEAR(D2.NGAYDATHANG) = @YEAR
        GROUP BY F1.TEN,YEAR(D2.NGAYDATHANG)
    END

    RETURN @KETQUA
END
GO

--2.2.b
CREATE TRIGGER trig_total_cost_of_bill
ON DONHANG_FD
FOR INSERT,UPDATE,DELETE
AS
BEGIN
    DECLARE @VOUCHERTIEN BIGINT
    DECLARE @VOUCHERPTRAM INT
    SELECT @VOUCHERTIEN = GIAMGIATHEOTIEN,@VOUCHERPTRAM = GIAMGIATHEOPHANTRAM
    FROM VOUCHER V,DONHANG_FD D1,HOADON H1,HOADON_VOUCHER HV 
    WHERE D1.MDH = H1.MADONHANG
    IF(@VOUCHERTIEN IS NOT NULL AND @VOUCHERPTRAM IS NULL)
    BEGIN
        UPDATE HOADON
        SET TONGTIEN = (SELECT SUM(GIA)-@VOUCHERTIEN FROM DONHANG_FD WHERE HOADON.MADONHANG = DONHANG_FD.MDH)
    END
    ELSE IF(@VOUCHERPTRAM IS NOT NULL AND @VOUCHERTIEN IS NULL)
    BEGIN
        UPDATE HOADON
        SET TONGTIEN = (SELECT SUM(GIA)*(1-@VOUCHERPTRAM/100) FROM DONHANG_FD WHERE HOADON.MADONHANG = DONHANG_FD.MDH) 
    END
    ELSE IF(@VOUCHERPTRAM IS NOT NULL AND @VOUCHERTIEN IS NOT NULL)
    BEGIN
        UPDATE HOADON
        SET TONGTIEN = (SELECT (SUM(GIA)*(1-@VOUCHERPTRAM/100)-@VOUCHERTIEN) FROM DONHANG_FD WHERE HOADON.MADONHANG = DONHANG_FD.MDH)
    END
    ELSE 
        UPDATE HOADON
        SET TONGTIEN = (SELECT SUM(GIA) FROM DONHANG_FD WHERE HOADON.MADONHANG = DONHANG_FD.MDH)
END
GO

DELETE FROM DONHANG_FD
WHERE MDH = 'DH01' AND TEN = 'Xoi bo cau'

